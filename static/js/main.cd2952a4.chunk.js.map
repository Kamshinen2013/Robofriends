{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","SearchBox.js","Scroll.js","ErrorBoundary.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","cardsArray","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","borderRadius","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"yLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCSCQ,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,+CAAf,UACA,qBAAKC,IAAM,SAASC,IAAG,+BAA2BH,EAA3B,cAEvB,sBAAKC,UAAU,KAAf,UACI,mCAAMH,KACN,kCAAKC,YCYFK,EAlBC,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACTC,EAAaD,EAAOE,KAAI,SAACC,EAAMC,GACjC,OAAU,cAAC,EAAD,CAENT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHVU,MAQf,OACA,8BACIH,KCDOI,EAdG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAW,MAAhB,SACI,uBACIA,UAAW,wCACXW,KAAK,SACLC,YAAa,gBACbC,SAAWH,OCGZI,G,MAVA,SAACC,GAChB,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAASC,aAAc,QAA7F,SACIL,EAAMM,aCoBCC,E,kDArBX,WAAYP,GAAO,IAAD,8BACd,cAAMA,IACDQ,MAAO,CACRC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAU,CAAEJ,UAAU,M,oBAG/B,WACI,OAAIG,KAAKJ,MAAMC,SACR,6DAGAG,KAAKZ,MAAMM,a,GAjBEQ,aCkDbC,E,kDA5CX,aAAc,IAAD,8BACT,gBAeJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAf1C,EAAKZ,MAAM,CACPnB,OAAQ,GACR6B,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfG,MAAM,8CACL9C,MAAK,SAAA+C,GAAQ,OAAGA,EAASC,UACzBhD,MAAK,SAAAiD,GAAU,EAAKX,SAAS,CAACxB,OAAQmC,S,oBAS3C,WAAW,IAAD,OACAC,EAAiBb,KAAKJ,MAAMnB,OAAOqC,QAAO,SAAArC,GAC5C,OAAOA,EAAOP,KAAK6C,cAAcC,SAAS,EAAKpB,MAAMU,YAAYS,kBAGrE,OAAiC,IAA7Bf,KAAKJ,MAAMnB,OAAOwC,OACX,4CAIH,sBAAK5C,UAAY,KAAjB,UACI,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWU,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU3B,OAASoC,e,GApCzBX,aCDlBgB,IAASC,OACN,cAAC,EAAD,IACCC,SAASC,eAAe,SAE5B7D,M","file":"static/js/main.cd2952a4.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Card = ({name, email, id}) => { // then you put the word props in place of {name, email, id}\r\n// const {name, email, id} = props\r\n    return (\r\n        <div className='bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n        <img alt = 'robots' src= {`https://robohash.org/${id}?200x200`} /> \r\n\r\n        <div className='tc'>\r\n            <h2> {name}</h2>\r\n            <p> {email}</p>\r\n        </div>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList= ({ robots })=> {\r\n    const cardsArray = robots.map((user, i) =>{\r\n        return  ( <Card \r\n            key = {i} \r\n            id={robots[i].id} \r\n            name={robots[i].name} \r\n            email={robots[i].email}\r\n            />\r\n    );\r\n\r\n    });\r\n    return (\r\n    <div>\r\n       {cardsArray}\r\n    </div>        \r\n    );\r\n}\r\n\r\nexport default CardList","import React from 'react'\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className= 'pa2'>\r\n            <input \r\n                className= ' kam pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder= 'search robots'\r\n                onChange= {searchChange} \r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react'\r\n\r\nconst Scroll = (props) =>{\r\nreturn (\r\n    <div style={{ overflowY: 'scroll', border: '5px solid black', height: '800px', borderRadius: '20px'}}>\r\n       {props.children}\r\n    </div>\r\n    \r\n    )\r\n};\r\n\r\n\r\nexport default Scroll","import { Component } from \"react\"\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            hasError: false\r\n        }\r\n\r\n    }\r\n    componentDidCatch(error, info){\r\n        this.setState ({ hasError: true  })\r\n    }\r\n\r\n    render () {\r\n        if (this.state.hasError){\r\n        return <h1>Ooooooops, That is not good</h1>\r\n    \r\n    }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\n\r\nexport default ErrorBoundary;","import React, {Component} from 'react'\r\nimport CardList from './CardList'\r\n// import { robots } from './robots'\r\nimport SearchBox from './SearchBox'\r\nimport './App.css'\r\nimport Scroll from './Scroll'\r\nimport ErrorBoundary from './ErrorBoundary'\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> response.json())\r\n        .then(users => {this.setState({robots: users})\r\n        })\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {           //onSearchChange(event) could throw up an error here so lways use arrow function\r\n        this.setState({ searchField: event.target.value}) //This updates the searchfield\r\n    }\r\n         \r\n    render () {\r\n        const filteredRobots = this.state.robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(this.state.searchField.toLowerCase()) \r\n        })\r\n\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading...</h1>\r\n        }\r\n        else {\r\n            return(\r\n                <div className = 'tc'>\r\n                    <h1 className= 'f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                        <CardList robots= {filteredRobots}/>\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\nimport App from './App'\n\nReactDOM.render(\n   <App />\n  , document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}